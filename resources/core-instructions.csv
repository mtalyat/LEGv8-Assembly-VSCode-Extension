name,mnemonic,format,opCode,argsFormat,args,argTypes
ADD,ADD,R,458,"_, _, _",013,rrr
ADD Immediate,ADDI,I,488-489,"_, _, _",012,rri
ADD Immediate & Set flags,ADDIS,I,588-589,"_, _, _",012,rri
ADD & Set flags,ADDS,R,558,"_, _, _",013,rrr
AND,AND,R,450,"_, _, _",013,rrr
AND Immediate,ANDI,I,490-491,"_, _, _",012,rri
AND Immediate & Set flags,ANDIS,I,790-791,"_, _, _",012,rri
AND & Set flags,ANDS,R,750,"_, _, _",013,rrr
Branch unconditionally,B,B,0A0-0BF,_,0,l
Branch conditionally (equal),B.EQ,CB,2A0,_,1,l
Branch conditionally (greater than or equal),B.GE,CB,2AA,_,1,l
Branch conditionally (greater than),B.GT,CB,2AC,_,1,l
Branch conditionally (higher),B.HI,CB,2A8,_,1,l
Branch conditionally (higher or same),B.HS,CB,2A2,_,1,l
Branch conditionally (less than or equal),B.LE,CB,2AD,_,1,l
Branch conditionally (lower),B.LO,CB,2A3,_,1,l
Branch conditionally (lower or same),B.LS,CB,2A9,_,1,l
Branch conditionally (less than),B.LT,CB,2AB,_,1,l
Branch conditionally (on minus),B.MI,CB,2A4,_,1,l
Branch conditionally (not equal),B.NE,CB,2A1,_,1,l
Branch conditionally (on plus),B.PL,CB,2A5,_,1,l
Branch conditionally (on overflow clear),B.VC,CB,2A8,_,1,l
Branch conditionally (on overflow set),B.VS,CB,2A7,_,1,l
Branch with Link,BL,B,4A0-4BF,_,0,l
Branch to Register,BR,R,6B0,_,0,r
Compare & Branch if Not Zero,CBNZ,CB,5A8-5AF,"_, _",01,rl
Compare & Branch if Zero,CBZ,CB,5A0-5A7,"_, _",01,rl
CoMPare,CMP,R,0,"_, _",01,rr
CoMPare Immediate,CMPI,I,0,"_, _",01,ri
Dump,DUMP,Z,0,,,
Exclusive OR,EOR,R,650,"_, _, _",013,rrr
Exclusive OR Immediate,EORI,I,690-691,"_, _, _",012,rri
Halt,HALT,Z,0,,,
LoaD Address,LDA,D,0,"_, _",01,ri
LoaD Register Unscaled offset,LDUR,D,7C2,"_, [_, _]",012,rri
LoaD Byte Unscaled offset,LDURB,D,1C2,"_, [_, _]",012,rri
LoaD Half Unscaled offset,LDURH,D,3C2,"_, [_, _]",012,rri
LoaD Signed Word Unscaled offset,LDURSW,D,5C4,"_, [_, _]",012,rri
LoaD eXclusive Register,LDXR,D,642,"_, [_, _]",012,rri
Logical Shift Left,LSL,R,69B,"_, _, _",012,rri
Logical Shift Right,LSR,R,69A,"_, _, _",012,rri
MOVe,MOV,R,0,"_, _",01,rr
MOVe wide with Keep,MOVK,IM,794-797,"_, _",01,ri
MOVe wide with Zero,MOVZ,IM,694-697,"_, _",01,ri
MULtiply,MUL,R,4D8,"_, _, _",013,rrr
Inclusive OR,ORR,R,550,"_, _, _",013,rrr
Inclusive OR Immediate,ORRI,I,590-591,"_, _, _",012,rri
PRiNt Line,PRNL,Z,0,,,
PRiNT register,PRNT,Z,0,_,0,r
Signed DIVide,SDIV,R,4D6,"_, _, _",013,rrr
Signed MULtiply High,SMULH,R,4DA,"_, _, _",013,rrr
STore Register Unscaled offset,STUR,D,7C0,"_, [_, _]",012,rri
STore Byte Unscaled offset,STURB,D,1C0,"_, [_, _]",012,rri
STore Half Unscaled offset,STURH,D,3C0,"_, [_, _]",012,rri
STore Word Unscaled offset,STURW,D,5C0,"_, [_, _]",012,rri
STore eXclusive Register,STXR,D,640,"_, [_, _]",012,rri
SUBtract,SUB,R,658,"_, _, _",013,rrr
SUBtract Immediate,SUBI,I,688-689,"_, _, _",012,rri
SUBtract Immediate & Set flags,SUBIS,I,788-789,"_, _, _",012,rri
SUBtract & Set flags,SUBS,R,758,"_, _, _",013,rrr
Unsigned DIVide,UDIV,R,4D6,"_, _, _",013,rrr
Unsigned MULtiply High,UMULH,R,4DE,"_, _, _",013,rrr